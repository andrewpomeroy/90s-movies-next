import Head from 'next/head';
import Image from 'next/image';
import { useEffect } from 'react';
import { promises as fs } from 'fs'
import path from 'path'
import allLetters from '../constants/allLetters';
import getMovies, { Movie } from '../lib/getMovies';
import styles from '../styles/Home.module.css';

type HomeProps = {
  movies: Movie[];
}

export default function Home({ movies }: HomeProps) {
  // const filteredMovies = movies.filter(movie => !allLetters.some(ltr => movie?.title[0]?.toLowerCase() === ltr));
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1> */}
        <div>
          {/* {movies.map(([key, value]) => {
            return (
              <div key={key}>
                <h2>{key}</h2>
                <ul>
                  {value.map(movie => (
                    <li key={movie.title}>
                      {movie.title}
                    </li>
                  ))}
                </ul>
              </div>
            )
          })}      */}
          <ul>
            {movies.map((movie) => {
              return (
                <li key={movie.id}>
                  {movie.title} â€” {movie.id}
                </li>
              )
            })}
          </ul>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

// export async function getStaticPaths() {

//   // Call an external API endpoint to get posts
//   // const res = await getMovies()

//   // Get the paths we want to prerender based on posts
//   // In production environments, prerender all pages
//   // (slower builds, but faster initial page load)
//   const paths = posts.map((post) => ({
//     params: { id: post.id },
//   }))

//   // { fallback: false } means other routes should 404
//   return { paths, fallback: false }
// }

export async function getStaticProps(context) {
  // const movies = await getMovies();

  const getMovies = async () => {
    const filePath = path.join(process.cwd(), './dist/movies.json');
    const movies = await fs.readFile(filePath, 'utf8');
    console.log(movies);    
    try {
      return JSON.parse(movies);
    } catch (err) {
      console.error(err);
      return [];
    }
  }
  return {
    props: {
      movies: await getMovies()
    }
  }
}